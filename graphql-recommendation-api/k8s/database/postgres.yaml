apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  namespace: recommendation-system
  labels:
    app: postgres
data:
  POSTGRES_DB: recommendation_db
  POSTGRES_USER: postgres
---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
  namespace: recommendation-system
  labels:
    app: postgres
type: Opaque
data:
  POSTGRES_PASSWORD: cG9zdGdyZXM=  # postgres (base64 encoded)
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: recommendation-system
  labels:
    app: postgres
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: fast-ssd  # Adjust based on your storage class
  resources:
    requests:
      storage: 20Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: recommendation-system
  labels:
    app: postgres
spec:
  serviceName: postgres
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:15-alpine
        ports:
        - containerPort: 5432
          name: postgres
        env:
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: postgres-config
              key: POSTGRES_DB
        - name: POSTGRES_USER
          valueFrom:
            configMapKeyRef:
              name: postgres-config
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: POSTGRES_PASSWORD
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        - name: postgres-config-volume
          mountPath: /docker-entrypoint-initdb.d
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - postgres
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - postgres
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-pvc
      - name: postgres-config-volume
        configMap:
          name: postgres-init-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-init-config
  namespace: recommendation-system
  labels:
    app: postgres
data:
  init.sql: |
    -- Initialize database for GraphQL Recommendation API
    CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
    CREATE DATABASE recommendation_test_db;
    GRANT ALL PRIVILEGES ON DATABASE recommendation_db TO postgres;
    GRANT ALL PRIVILEGES ON DATABASE recommendation_test_db TO postgres;
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: recommendation-system
  labels:
    app: postgres
spec:
  type: ClusterIP
  ports:
  - port: 5432
    targetPort: 5432
    protocol: TCP
    name: postgres
  selector:
    app: postgres