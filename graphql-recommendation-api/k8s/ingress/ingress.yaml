apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: api-ingress
  namespace: recommendation-system
  labels:
    app: graphql-recommendation-api
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    # SSL redirect (uncomment for HTTPS)
    # nginx.ingress.kubernetes.io/ssl-redirect: "true"
    # cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx
  # TLS configuration (uncomment for HTTPS)
  # tls:
  # - hosts:
  #   - api.yourdomain.com
  #   secretName: api-tls-secret
  rules:
  - host: api.localhost  # Change to your domain
    http:
      paths:
      - path: /graphql
        pathType: Prefix
        backend:
          service:
            name: api-service
            port:
              number: 8000
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: api-service
            port:
              number: 8000
      - path: /health
        pathType: Prefix
        backend:
          service:
            name: api-service
            port:
              number: 8000
      - path: /metrics
        pathType: Prefix
        backend:
          service:
            name: api-service
            port:
              number: 8000
---
# Monitoring ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: monitoring-ingress
  namespace: recommendation-system
  labels:
    app: monitoring
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: monitoring-auth
    nginx.ingress.kubernetes.io/auth-realm: "Authentication Required"
spec:
  ingressClassName: nginx
  rules:
  - host: monitoring.localhost  # Change to your domain
    http:
      paths:
      - path: /grafana
        pathType: Prefix
        backend:
          service:
            name: grafana
            port:
              number: 3000
      - path: /prometheus
        pathType: Prefix
        backend:
          service:
            name: prometheus
            port:
              number: 9090
      - path: /jaeger
        pathType: Prefix
        backend:
          service:
            name: jaeger-query
            port:
              number: 16686
---
# Basic auth secret for monitoring (create with: htpasswd -c auth admin)
apiVersion: v1
kind: Secret
metadata:
  name: monitoring-auth
  namespace: recommendation-system
type: Opaque
data:
  auth: YWRtaW46JGFwcjEkSDZ1YjJoNlEkVDBGaGxWZDJJdnN1TjFUTVVCSjB0LgoK  # admin:admin (change this!)