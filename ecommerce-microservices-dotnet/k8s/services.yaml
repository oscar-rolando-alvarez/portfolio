apiVersion: apps/v1
kind: Deployment
metadata:
  name: identity-service
  namespace: ecommerce
spec:
  replicas: 2
  selector:
    matchLabels:
      app: identity-service
  template:
    metadata:
      labels:
        app: identity-service
    spec:
      containers:
      - name: identity-service
        image: ecommerce/identity-service:latest
        ports:
        - containerPort: 80
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: "Production"
        - name: ConnectionStrings__DefaultConnection
          value: "Server=sqlserver;Database=ECommerceIdentity;User Id=sa;Password=YourStrong@Passw0rd;TrustServerCertificate=true;"
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: identity-service
  namespace: ecommerce
spec:
  selector:
    app: identity-service
  ports:
  - port: 80
    targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: catalog-service
  namespace: ecommerce
spec:
  replicas: 2
  selector:
    matchLabels:
      app: catalog-service
  template:
    metadata:
      labels:
        app: catalog-service
    spec:
      containers:
      - name: catalog-service
        image: ecommerce/catalog-service:latest
        ports:
        - containerPort: 80
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: "Production"
        - name: CatalogDatabase__ConnectionString
          value: "mongodb://mongodb:27017"
        - name: ConnectionStrings__RabbitMQ
          value: "amqp://guest:guest@rabbitmq:5672"
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: catalog-service
  namespace: ecommerce
spec:
  selector:
    app: catalog-service
  ports:
  - port: 80
    targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: basket-service
  namespace: ecommerce
spec:
  replicas: 2
  selector:
    matchLabels:
      app: basket-service
  template:
    metadata:
      labels:
        app: basket-service
    spec:
      containers:
      - name: basket-service
        image: ecommerce/basket-service:latest
        ports:
        - containerPort: 80
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: "Production"
        - name: ConnectionStrings__Redis
          value: "redis:6379"
        - name: ConnectionStrings__RabbitMQ
          value: "amqp://guest:guest@rabbitmq:5672"
        - name: Services__Catalog
          value: "http://catalog-service:80"
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: basket-service
  namespace: ecommerce
spec:
  selector:
    app: basket-service
  ports:
  - port: 80
    targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ordering-service
  namespace: ecommerce
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ordering-service
  template:
    metadata:
      labels:
        app: ordering-service
    spec:
      containers:
      - name: ordering-service
        image: ecommerce/ordering-service:latest
        ports:
        - containerPort: 80
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: "Production"
        - name: ConnectionStrings__DefaultConnection
          value: "Server=sqlserver;Database=ECommerceOrdering;User Id=sa;Password=YourStrong@Passw0rd;TrustServerCertificate=true;"
        - name: ConnectionStrings__RabbitMQ
          value: "amqp://guest:guest@rabbitmq:5672"
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: ordering-service
  namespace: ecommerce
spec:
  selector:
    app: ordering-service
  ports:
  - port: 80
    targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: payment-service
  namespace: ecommerce
spec:
  replicas: 2
  selector:
    matchLabels:
      app: payment-service
  template:
    metadata:
      labels:
        app: payment-service
    spec:
      containers:
      - name: payment-service
        image: ecommerce/payment-service:latest
        ports:
        - containerPort: 80
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: "Production"
        - name: ConnectionStrings__DefaultConnection
          value: "Server=sqlserver;Database=ECommercePayment;User Id=sa;Password=YourStrong@Passw0rd;TrustServerCertificate=true;"
        - name: ConnectionStrings__RabbitMQ
          value: "amqp://guest:guest@rabbitmq:5672"
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: payment-service
  namespace: ecommerce
spec:
  selector:
    app: payment-service
  ports:
  - port: 80
    targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: ecommerce
spec:
  replicas: 2
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
      - name: api-gateway
        image: ecommerce/api-gateway:latest
        ports:
        - containerPort: 80
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: "Production"
---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway
  namespace: ecommerce
spec:
  selector:
    app: api-gateway
  ports:
  - port: 80
    targetPort: 80
  type: LoadBalancer